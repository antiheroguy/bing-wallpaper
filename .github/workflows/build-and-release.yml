name: Build and Release Extension

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install jq

      - name: Get version from package.json
        id: get-version
        run: echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Get name from package.json
        id: get-name
        run: echo "name=$(jq -r '.name' package.json)" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install

      - name: Build and Zip Extension
        run: yarn repack

      - name: Check if release exists
        id: check-release
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.get-version.outputs.version }})
          if [ $response -eq 200 ]; then
            echo "Release already exists. Exiting..."
            exit 0
          fi

      - name: Create Release
        id: create_release
        if: steps.check-release.run != '0'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: "${{ steps.get-name.outputs.name }} ${{ steps.get-version.outputs.version }}"
          body: |
            "${{ steps.get-name.outputs.name }} ${{ steps.get-version.outputs.version }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: steps.check-release.run != '0'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ steps.get-name.outputs.name }}-v${{ steps.get-version.outputs.version }}.zip
          asset_name: ${{ steps.get-name.outputs.name }}-v${{ steps.get-version.outputs.version }}.zip
          asset_content_type: application/zip
